{"version":3,"sources":["screens/CourseScreen.js","components/Courses.js","components/CourseDetail.js","screens/ErrorsDisplay.js","components/CreateCourse.js","components/DeleteCourse.js","components/UpdateCourse.js","components/UserSignUp.js","components/UserSignIn.js","components/NotFound.js","components/Forbidden.js","components/UnhandledError.js","Context.js","PrivateRoute.js","App.js","components/Header.js","components/UserSignOut.js","serviceWorker.js","index.js"],"names":["CourseScreen","title","id","className","to","Courses","state","courses","this","props","location","from","pathname","context","actions","signOut","fetch","then","res","ok","json","body","setState","catch","err","console","log","history","push","map","course","key","_id","version","xmlns","x","y","viewBox","points","Component","ReactMarkdown","require","CourseDetail","displayPlayButton","currentUser","courseOwnerEmail","emailAddress","materialsNeeded","userCourse","match","params","errorMessage","status","statusText","error","Error","path","userId","description","estimatedTime","firstName","lastName","user","source","ErrorsDisplay","errors","errorsDisplay","length","i","CreateCourse","cancel","e","preventDefault","handleChange","target","name","value","handleSubmit","encodedCredentials","method","headers","JSON","stringify","message","onSubmit","type","placeholder","onChange","onClick","DeleteCourse","submit","prevState","UpdateCourse","UserSignUp","password","confirmPassword","signIn","UserSignIn","undefined","Context","React","createContext","Provider","a","btoa","Cookies","set","expires","fetchRes","remove","getJSON","userCredential","children","Consumer","withContext","OriginalComponent","component","rest","render","HeaderWithContext","withcontext","UserSignInWithContext","UserSignUpWithContext","UserSignOutWithContext","CreateCourseWithContext","UpdateCourseWithContext","CourseDetailWithContext","DeleteCourseWithContext","CoursesWithContext","exact","PrivateRoute","Forbidden","UnhandledError","NotFound","Boolean","window","hostname","ReactDOM","StrictMode","App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f075c2eb.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst CourseScreen = ({title, id}) => {\n    return (\n      <>\n        <div className=\"grid-33\">\n          <Link className=\"course--module course--link\" to={`courses/${id}`}>\n            <h4 className=\"course--label\">Course</h4>\n            <h3 className=\"course--title\">{title}</h3>\n          </Link>\n        </div>\n      </>\n    );\n}\n\nCourseScreen.propTypes = {\n  title: PropTypes.string,\n  id: PropTypes.string\n};\n\nexport default CourseScreen;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport CourseScreen from '../screens/CourseScreen';\n\nexport default class Courses extends Component {\n  constructor(){\n    super()\n    this.state = {\n      courses: [],\n      className: \"show\"\n    }\n  }\n\n\n  componentDidMount(){\n    //check for location's state\n    const { state } = this.props.location;\n    //check if previous location path is \"/signout\"\n    if(state){\n      const { pathname } = state.from;\n      const isSingOutPath = (pathname === \"/signout\")\n      if (isSingOutPath) {\n    //sign out current user if location state is equal to signout\n        this.props.context.actions.signOut();\n      }\n    }\n\n    fetch('https://courses-library-api.herokuapp.com/api/courses')\n    .then(res => {\n      if(res.ok){\n        return res;\n      }\n    })\n    .then(res => res.json())\n    .then(body => {\n      this.setState({\n        courses: body.courses,\n        className: \"hidden\"\n      })\n    })\n    .catch( err => {\n      console.log(err);\n      this.props.history.push('/error');\n    })\n  }\n\n\n  render(){\n    //map over the courses and return each course within and li tag\n    const courses = this.state.courses.map(course => {\n      return (\n        <CourseScreen\n          key={course._id}\n          id={course._id}\n          title={course.title}\n        />\n      )\n    });\n\n    return (\n      <div className=\"bounds\">\n        <h1 className={this.state.className}> Loading... </h1>\n        {courses}\n        <div className=\"grid-33\">\n          <Link className=\"course--module course--add--module\" to=\"/courses/create\">\n            <h3 className=\"course--add--title\">\n              <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 13 13\" className=\"add\">\n                <polygon points=\"7,6 7,0 6,0 6,6 0,6 0,7 6,7 6,13 7,13 7,7 13,7 13,6 \"></polygon>\n              </svg>New Course\n            </h3>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n// ReactMarkdown provides the formating style to display the list of materials for courses\nconst ReactMarkdown = require('react-markdown')\n\n\nexport default class CourseDetail extends Component {\n  constructor(){\n    super()\n    this.state = {\n      course: '',\n      materialsNeeded: '',\n      userCourse: ''\n    }\n  }\n\n  componentDidMount(){\n    const { id } = this.props.match.params;\n    fetch(`https://courses-library-api.herokuapp.com/api/courses/${id}`)\n    .then(res => {\n      if(res.ok){\n        return res;\n      } else {\n        let errorMessage = `${res.status} (${res.statusText})`\n        let error = new Error(errorMessage);\n\n        if(res.status === 404){\n          error = { error, path: '/notfound'}\n        } else {\n          error = { error, path: '/error'}\n        }\n\n        throw(error);\n      }\n    })\n    .then(res => res.json())\n    .then(body => {\n      this.setState({\n        course: body.course,\n        materialsNeeded: body.course.materialsNeeded,\n        userCourse: body.course.userId\n      });\n      console.log(this.state);\n    })\n    .catch( error => {\n      console.error(error);\n      this.props.history.push(error.path);\n    })\n  }\n\n  /**\n   * displayPlayButton takes user information as parameter and return update and delete buttons if signed in user and course owner\n   has identical email address\n   * @param {object, string, integer} currentUser. courseOwnerEmail. id.\n   * @returns {jsx} update and delete button\n   * add update and delete buttons to the course detail component\n   */\ndisplayPlayButton = (currentUser, courseOwnerEmail, id) => {\n    if(currentUser){\n      if(currentUser.emailAddress === courseOwnerEmail) {\n        return (\n          <>\n            <Link className=\"button\" to={`/courses/${id}/update`}>Update Course</Link>\n            <Link className=\"button\" to={`/courses/${id}/delete`}>Delete Course</Link>\n          </>\n        )\n      }\n    }\n  }\n\n  render(){\n    console.log(this.state);\n    const { title, description, estimatedTime } = this.state.course;\n    // const { firstName, lastName, emailAddress} = userId;\n    const { firstName, lastName, emailAddress} = this.state.userCourse;\n    const { materialsNeeded } = this.state;\n    const { id } = this.props.match.params;\n    //import from context.js\n    const { user } = this.props.context;\n\n    return (\n      <div>\n      { this.state.course ? (\n        <>\n          <div className=\"actions--bar\">\n            <div className=\"bounds\">\n              <div className=\"grid-100\">\n                <span>\n                  {this.displayPlayButton(user, emailAddress, id)}\n                </span>\n                <Link className=\"button button-secondary\" to=\"/\">Return to List</Link>\n              </div>\n            </div>\n          </div>\n          <div className=\"bounds course--detail\">\n            <div className=\"grid-66\">\n              <div className=\"course--header\">\n                <h4 className=\"course--label\">Course</h4>\n                <h3 className=\"course--title\">{title}</h3>\n                <p>By {`${firstName} ${lastName}`}</p>\n              </div>\n              <div className=\"course--description\">\n                {description}\n              </div>\n            </div>\n            <div className=\"grid-25 grid-right\">\n              <div className=\"course--stats\">\n                <ul className=\"course--stats--list\">\n                  <li className=\"course--stats--list--item\">\n                    <h4>Estimated Time</h4>\n                    <h3>{estimatedTime}</h3>\n                  </li>\n                  <li className=\"course--stats--list--item\">\n                    <h4>Materials Needed</h4>\n                    <ul>\n                    {/* ReactMarkdown provides the formating style to display the list of materials for courses */}\n                      <ReactMarkdown\n                        source={materialsNeeded}\n                      />\n                    </ul>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </>)\n        :\n        <h1 className=\"loading\"> Loading... </h1>\n      }\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\n// dynamically display erros based on the http response status\nconst ErrorsDisplay = ({ errors }) => {\n  let errorsDisplay = null;\n\n  if (errors.length) {\n    errorsDisplay = (\n      <div>\n        <h2 className=\"validation--errors--label\">Validation errors</h2>\n        <div className=\"validation-errors\">\n          <ul>\n            {errors.map((error, i) => <li key={i}>{error}</li>)}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n\n  return errorsDisplay;\n}\n\nexport default ErrorsDisplay;\n","import React, { Component } from 'react';\nimport ErrorsDisplay from '../screens/ErrorsDisplay';\n\nexport default class CreateCourse extends Component {\n  constructor(){\n    super()\n    this.state = {\n      title: \"\",\n      description: \"\",\n      estimatedTime: \"\",\n      materialsNeeded: \"\",\n      errors: []\n    }\n  }\n\n  // redirect to homepage\n  cancel = (e) => {\n    e.preventDefault()\n    this.props.history.push('/');\n  }\n\n  //dynamically update state based on event name\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const { title, description, estimatedTime, materialsNeeded } = this.state;\n\n    const course = { title, description, estimatedTime, materialsNeeded }\n\n    const { encodedCredentials } = this.props.context.user;\n\n      fetch('https://courses-library-api.herokuapp.com/api/courses', {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json; charset=utf-8',\n          'Authorization': `Basic ${encodedCredentials}`\n        },\n        body: JSON.stringify(course)\n      })\n      .then(res => {\n        if (res.status === 201) {\n          this.props.history.push('/');\n          return [];\n        //update the errors state if the request is bad or unthorized\n        } else if (res.status === 400 ||res.status === 401 ){\n          return res.json()\n          .then(body => {\n            this.setState({\n              errors: body.message\n            })\n          })\n        } else {\n          let errorMessage = `${res.status} (${res.statusText})`\n          let error = new Error(errorMessage);\n          throw(error);\n        }\n      })\n      .catch( err => {\n        console.error(err);\n        this.props.history.push('/error');\n      })\n  }\n\n  render(){\n\n    const { user } = this.props.context;\n\n    return (\n      <div className=\"bounds course--detail\">\n        <h1>Create Course</h1>\n        <ErrorsDisplay errors={this.state.errors}/>\n        <div>\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"grid-66\">\n              <div className=\"course--header\">\n                <h4 className=\"course--label\">Course</h4>\n                <div><input id=\"title\" name=\"title\" type=\"text\" className=\"input-title course--title--input\" placeholder=\"Course title...\"\n                    onChange={this.handleChange} value={this.state.title}/></div>\n                <p>By\n                { user ? ` ${user.firstName} ${user.lastName}` : \" \"}\n                </p>\n              </div>\n              <div className=\"course--description\">\n                <div><textarea id=\"description\" name=\"description\" className=\"\" placeholder=\"Course description...\" onChange={this.handleChange} value={this.state.description}></textarea></div>\n              </div>\n            </div>\n            <div className=\"grid-25 grid-right\">\n              <div className=\"course--stats\">\n                <ul className=\"course--stats--list\">\n                  <li className=\"course--stats--list--item\">\n                    <h4>Estimated Time</h4>\n                    <div><input id=\"estimatedTime\" name=\"estimatedTime\" type=\"text\" className=\"course--time--input\"\n                        placeholder=\"Hours\" onChange={this.handleChange} value={this.state.estimatedTime}/></div>\n                  </li>\n                  <li className=\"course--stats--list--item\">\n                    <h4>Materials Needed</h4>\n                    <div>\n                      <textarea id=\"materialsNeeded\" name=\"materialsNeeded\" className=\"\"\n                        placeholder={'List materials Format Example... \\n * Address Line1\\n * Address Line2\\n * City State\\n OR\\n 1. Address Line1\\n 2. Address Line2\\n 3. City State'}\n                        onChange={this.handleChange} value={this.state.materialsNeeded}>\n                      </textarea></div>\n                  </li>\n                </ul>\n              </div>\n            </div>\n            <div className=\"grid-100 pad-bottom\"><button className=\"button\" type=\"submit\">Create Course</button><button className=\"button button-secondary\" onClick={this.cancel}>Cancel</button></div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class DeleteCourse extends Component {\n\n  constructor(){\n    super()\n    this.state = {\n      title: \"\"\n    }\n  }\n\n  componentDidMount(){\n    let emailAddress = \"\"\n    const { user } = this.props.context;\n\n    if(user) {\n       emailAddress = user.emailAddress;\n    }\n\n    const { id } = this.props.match.params;\n\n    fetch(`https://courses-library-api.herokuapp.com/api/courses/${id}`)\n    .then(res => {\n      if(res.ok){\n        return res;\n      } else {\n        let errorMessage = `${res.status} (${res.statusText})`\n        let error = new Error(errorMessage);\n\n        if(res.status === 404){\n          error = { error, path: '/notfound'}\n        } else {\n          error = { error, path: '/error'}\n        }\n\n        throw(error);\n      }\n    })\n    .then(res => res.json())\n    .then(body => {\n      this.setState({\n        title: body.course.title,\n        userCourse: body.course.userCourse\n      })\n      //check for user credential validity before allowing the page to render\n      if(emailAddress === this.state.userCourse.emailAddress){\n        console.log('Access granted');\n      } else {\n        this.props.history.push('/forbidden');\n        console.log('Access denied');\n      }\n    })\n    .catch(error => {\n      console.log(error);\n      this.props.history.push(error.path);\n    })\n  }\n\n //\n  submit = (e) => {\n    e.preventDefault();\n\n    const { encodedCredentials } = this.props.context.user;\n\n    const { id } = this.props.match.params;\n\n    fetch(`https://courses-library-api.herokuapp.com/api/courses/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          'Content-Type': 'application/json; charset=utf-8',\n          'Authorization': `Basic ${encodedCredentials}`\n        }\n      })\n      .then(res => {\n        if (res.status === 204) {\n          this.props.history.push('/');\n          return [];\n        } else if (res.status === 403){\n          this.props.history.push('/forbidden');\n          return [];\n        } else if (res.status === 401){\n            return res.json()\n            .then(body => {\n              this.setState( prevState => ({\n                errors: body.message\n              }))\n            })\n        } else {\n          let errorMessage = `${res.status} (${res.statusText})`\n          let error = new Error(errorMessage);\n          throw(error);\n        }\n      })\n      .catch(err => {\n        console.log(err);\n        this.props.history.push('/error');\n      })\n  }\n\n// redirect to homepage\n  cancel = (e) => {\n    e.preventDefault()\n    const { id } = this.props.match.params;\n    this.props.history.push(`/courses/${id}`);\n  }\n\n\n\n  render(){\n\n    const { firstName, lastName } = this.props.context.user;\n    const { title } = this.state;\n\n\n    return (\n      <div>\n        { title ? (\n          <>\n            <div className=\"actions--bar\">\n              <div className=\"bounds\">\n                <div className=\"grid-100\">\n                <p> Are you sure want to delete this course?</p>\n                  <button className=\"button button-secondary\" onClick={this.cancel}>CANCEL</button>\n                  <button className=\"button\" onClick={this.submit}>YES</button>\n                </div>\n              </div>\n            </div>\n            <div className=\"bounds course--detail\">\n              <div className=\"grid-66\">\n                <div className=\"course--header\">\n                  <h4 className=\"course--label\">Course</h4>\n                  <h3 className=\"course--title\">{title}</h3>\n                  <p>By {`${firstName} ${lastName}`}</p>\n                </div>\n                <div className=\"course--description\">\n                </div>\n              </div>\n              <div className=\"grid-25 grid-right\">\n                <div className=\"course--stats\">\n                  <ul className=\"course--stats--list\">\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </>)\n          :\n          (<h1 className=\"loading\"> Loading... </h1>)\n        }\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport ErrorsDisplay from '../screens/ErrorsDisplay';\n\nexport default class UpdateCourse extends Component {\n  constructor(){\n    super()\n    this.state = {\n      title: \"\",\n      description: \"\",\n      estimatedTime: \"\",\n      materialsNeeded: \"\",\n      userCourse: \"\",\n      errors: []\n    }\n  }\n\n  /**\n   * Cancel redirect back to the course detail page.\n   * @param {object} eventObject.\n   */\n  cancel = (e) => {\n    e.preventDefault()\n    const { id } = this.props.match.params;\n    this.props.history.push(`/courses/${id}`);\n  }\n\n  //update state dynamically base on the event\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  componentDidMount(){\n    let emailAddress = \"\"\n    const { user } = this.props.context;\n\n    if(user) {\n       emailAddress = user.emailAddress;\n    }\n\n    const { id } = this.props.match.params;\n\n    fetch(`https://courses-library-api.herokuapp.com/api/courses/${id}`)\n    .then(res => {\n      console.log(res);\n      if(res.ok){\n        return res;\n      } else {\n        let errorMessage = `${res.status} (${res.statusText})`\n        let error = new Error(errorMessage);\n\n        if(res.status === 404){\n          error = { error, path: '/notfound'}\n        } else {\n          error = { error, path: '/error'}\n        }\n\n        throw(error);\n      }\n    })\n    .then(res => res.json())\n    .then(body => {\n      this.setState({\n        title: body.course.title,\n        description: body.course.description,\n        estimatedTime: body.course.estimatedTime,\n        materialsNeeded: body.course.materialsNeeded,\n        userCourse: body.course.userId\n      })\n      //check for user credential validity before allowing the page to render\n      if(emailAddress === this.state.userCourse.emailAddress){\n        console.log('Access granted');\n      } else {\n        this.props.history.push('/forbidden');\n        console.log('Access denied');\n      }\n    })\n    .catch(error => {\n      console.log(error);\n      this.props.history.push(error.path);\n    })\n  }\n\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { title, description, estimatedTime, materialsNeeded } = this.state\n\n    const course = { title, description, estimatedTime, materialsNeeded }\n\n    const { encodedCredentials } = this.props.context.user;\n\n    const { id } = this.props.match.params;\n\n    fetch(`https://courses-library-api.herokuapp.com/api/courses/${id}`, {\n        method: \"PUT\",\n        headers: {\n          'Content-Type': 'application/json; charset=utf-8',\n          'Authorization': `Basic ${encodedCredentials}`\n        },\n        body: JSON.stringify(course)\n      })\n      .then(res => {\n        if (res.status === 204) {\n          this.props.history.push('/');\n          return [];\n        } else if (res.status === 400 || res.status === 401){\n            return res.json()\n            .then(body => {\n              this.setState( prevState => ({\n                errors: body.message\n              }))\n            })\n        } else if (res.status === 403 ){\n          this.props.history.push('/forbidden');\n          return [];\n        } else {\n          let errorMessage = `${res.status} (${res.statusText})`\n          let error = new Error(errorMessage);\n          throw(error);\n        }\n      })\n      .catch( err => {\n        console.log(err);\n        this.props.history.push('/error');\n      })\n  }\n\n\n  render(){\n    const { title, description, estimatedTime, materialsNeeded} = this.state;\n    const { firstName, lastName } = this.state.userCourse;\n\n    return (\n      <div className=\"bounds course--detail\">\n        { this.state.userCourse ? (\n          <>\n          <h1>Update Course</h1>\n          <ErrorsDisplay errors={this.state.errors}/>\n          <div>\n            <form onSubmit={this.handleSubmit}>\n              <div className=\"grid-66\">\n                <div className=\"course--header\">\n                  <h4 className=\"course--label\">Course</h4>\n                  <div><input id=\"title\" name=\"title\" type=\"text\" className=\"input-title course--title--input\" placeholder=\"Course title...\"\n                      onChange={this.handleChange} value={title}/></div>\n                  <p>By {`${firstName} ${lastName}`}</p>\n                </div>\n                <div className=\"course--description\">\n                  <div>\n                    <textarea id=\"description\" name=\"description\" className=\"\" placeholder=\"Course description...\" onChange={this.handleChange} value={description}>\n                    </textarea>\n                  </div>\n                </div>\n              </div>\n              <div className=\"grid-25 grid-right\">\n                <div className=\"course--stats\">\n                  <ul className=\"course--stats--list\">\n                    <li className=\"course--stats--list--item\">\n                      <h4>Estimated Time</h4>\n                      <div>\n                        <input id=\"estimatedTime\" name=\"estimatedTime\" type=\"text\" className=\"course--time--input\"\n                          placeholder=\"Hours\" onChange={this.handleChange} value={estimatedTime}/>\n                      </div>\n                    </li>\n                    <li className=\"course--stats--list--item\">\n                      <h4>Materials Needed</h4>\n                      <div>\n                        <textarea id=\"materialsNeeded\" name=\"materialsNeeded\" className=\"\" placeholder=\"List materials...\" onChange={this.handleChange} value={materialsNeeded}>\n                        </textarea>\n                      </div>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n              <div className=\"grid-100 pad-bottom\"><button className=\"button\" type=\"submit\">Update Course</button><button className=\"button button-secondary\" onClick={this.cancel}>Cancel</button></div>\n            </form>\n          </div>\n          </>)\n          :\n          (<h1> Loading... </h1>)\n        }\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport ErrorsDisplay from '../screens/ErrorsDisplay';\n\nexport default class UserSignUp extends Component {\n  constructor(){\n    super()\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      emailAddress: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      errors: []\n    }\n  }\n  // redirect to homepage\n  cancel = (e) => {\n    e.preventDefault()\n    this.props.history.push('/');\n  }\n\n //update state dynamically base on the event\n  handleChange = (e) => {\n    this.setState({\n        [e.target.name] : e.target.value\n      })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const {firstName, lastName, emailAddress, password, confirmPassword } = this.state\n\n    let passErrorMsg;\n\n    if(password !== confirmPassword){\n      passErrorMsg = \"Password and Confirm Password does not match\"\n      this.setState( prevState => ({\n          errors: [ passErrorMsg ]\n      }))\n    } else {\n\n      const user = { firstName, lastName, emailAddress, password };\n\n      const { signIn } = this.props.context.actions;\n\n      fetch('https://courses-library-api.herokuapp.com/api/users', {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json; charset=utf-8',\n        },\n        body: JSON.stringify(user)\n      })\n      .then(res => {\n        if (res.status === 201) {\n          signIn(emailAddress, password)\n          .then(() => {\n              this.props.history.push('/');\n            });\n          return [];\n        } else if (res.status === 400){\n            return res.json()\n            .then(body => {\n              this.setState({\n                errors: body.errors\n              })\n            })\n        } else if (res.status === 409){\n          return res.json()\n          .then(body => {\n            this.setState(prevState => ({\n              errors: [ body.error ]\n            }))\n          })\n        } else {\n          let errorMessage = `${res.status} (${res.statusText})`\n          let error = new Error(errorMessage);\n          throw(error);\n        }\n      })\n      .catch( err => {\n        console.log(err);\n        this.props.history.push('/error');\n      })\n    }\n  }\n\n\n  render() {\n\n    return (\n      <div className=\"bounds\">\n        <div className=\"grid-33 centered signin\">\n          <h1>Sign Up</h1>\n          <ErrorsDisplay errors={this.state.errors}/>\n          <div>\n            <form onSubmit={this.handleSubmit}>\n              <div>\n                <input id=\"firstName\" name=\"firstName\" type=\"text\" className=\"\" placeholder=\"First Name\" onChange={this.handleChange} value={this.state.firstName}/>\n              </div>\n              <div>\n                <input id=\"lastName\" name=\"lastName\" type=\"text\" className=\"\" placeholder=\"Last Name\" onChange={this.handleChange} value={this.state.lastName}/>\n              </div>\n              <div>\n                <input id=\"emailAddress\" name=\"emailAddress\" type=\"text\" className=\"\" placeholder=\"Email Address\" onChange={this.handleChange} value={this.state.emailAddress}/>\n              </div>\n              <div>\n                <input id=\"password\" name=\"password\" type=\"password\" className=\"\" placeholder=\"Password\" onChange={this.handleChange} value={this.state.password}/>\n              </div>\n              <div>\n                <input id=\"confirmPassword\" name=\"confirmPassword\" type=\"password\" className=\"\" placeholder=\"Confirm Password\" onChange={this.handleChange} value={this.state.confirmPassword}/>\n              </div>\n              <div className=\"grid-100 pad-bottom\">\n                <button className=\"button\" type=\"submit\">Sign Up</button>\n                <button className=\"button button-secondary\" onClick={this.cancel}>Cancel</button>\n              </div>\n            </form>\n          </div>\n          <p>Already have a user account? <Link to=\"/signin\">Click here</Link> to sign in!</p>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport ErrorsDisplay from '../screens/ErrorsDisplay';\n\nexport default class UserSignIn extends Component {\n  constructor(){\n    super()\n    this.state = {\n      emailAddress: \"\",\n      password: \"\",\n      currentUser: \"\",\n      user: \"\",\n      errors: []\n    }\n  }\n\n // redirect to homepage\n  cancel = (e) => {\n    e.preventDefault()\n    this.props.history.push('/');\n  }\n\n  //update state dynamically base on the event\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const { signIn } = this.props.context.actions;\n    const { from } = this.props.location.state || { from: { pathname: '/' } };\n    const { emailAddress, password } = this.state;\n\n    //if the signin response status is 401 - display 'Sign-in was unsuccessful'\n    signIn(emailAddress, password)\n    .then(res => {\n      if(res === undefined) {\n        this.props.history.push(from);\n      } else if(res.status === 401) {\n        this.setState({\n            errors: [ 'Sign-in was unsuccessful' ]\n        });\n      } else {\n        let errorMessage = `${res.status} (${res.statusText})`\n        let error = new Error(errorMessage);\n        throw(error);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n      this.props.history.push('/error');\n    })\n  }\n\n\n  render(){\n\n    return (\n      <div className=\"bounds\">\n        <div className=\"grid-33 centered signin\">\n          <h1>Sign In</h1>\n          <ErrorsDisplay errors={this.state.errors}/>\n          <div>\n            <form onSubmit={this.handleSubmit}>\n              <div><input id=\"emailAddress\" name=\"emailAddress\" type=\"text\" className=\"\" placeholder=\"Email Address\" onChange={this.handleChange} value={this.state.emailAddress}/></div>\n              <div><input id=\"password\" name=\"password\" type=\"password\" className=\"\" placeholder=\"Password\" onChange={this.handleChange} value={this.state.password}/></div>\n              <div className=\"grid-100 pad-bottom\"><button className=\"button\" type=\"submit\">Sign In</button><button className=\"button button-secondary\" onClick={this.cancel}>Cancel</button></div>\n            </form>\n          </div>\n          <p>&nbsp;</p>\n          <p>Don't have a user account? <Link to=\"/signup\">Click here</Link> to sign up!</p>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default () => {\n    return (\n      <div className=\"bounds\">\n        <h1>Not Found</h1>\n        <p>Sorry! We couldn't find the page you're looking for.</p>\n        <Link className=\"button button-secondary\" to=\"/\">Return to List</Link>\n      </div>\n    )\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default () => {\n\n    return (\n      <div className=\"bounds\">\n        <h1>Forbidden</h1>\n        <p>Oh oh! You can't access this page.</p>\n        <Link className=\"button button-secondary\" to=\"/\">Return to List</Link>\n      </div>\n    );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default () => {\n\n    return (\n      <div className=\"bounds\">\n        <h1>Error</h1>\n        <p>Sorry! We just encountered an unexpected error.</p>\n        <Link className=\"button button-secondary\" to=\"/\">Return to List</Link>\n      </div>\n    );\n}\n","import React, { Component } from 'react';\nimport Cookies from 'js-cookie';\nconst Context = React.createContext();\n\nexport class Provider extends Component {\n  constructor(){\n    super()\n    this.state = {\n      user: Cookies.getJSON('authenticatedUser') || null,\n      userCredential: \"\"\n    }\n  }\n\n  /**\n   * Sing in a user and set the response in global state.\n   * @param {string, string} EmailAddress . Password.\n   * @returns {promise} A declaration that someting will happen.\n   */\n\n  signIn = async (emailAddress, password) => {\n\n    const encodedCredentials = btoa(`${emailAddress}:${password}`);\n\n    const fetchRes = await fetch('https://courses-library-api.herokuapp.com/api/users', {\n      method: \"GET\",\n      headers: {\n        'Content-Type': 'application/json; charset=utf-8',\n        'Authorization': `Basic ${encodedCredentials}`\n      }\n    })\n    .then(res => {\n      if(res.status === 200){\n        return res.json()\n        .then(user => user.name)\n        .then(user => {\n          this.setState({\n            user: {\n              firstName: user.firstName,\n              lastName: user.lastName,\n              emailAddress,\n              encodedCredentials\n            }\n          })\n          Cookies.set('authenticatedUser', JSON.stringify(this.state.user), { expires: 1 });\n        })\n      } else {\n        return res;\n      }\n    })\n    return fetchRes;\n  }\n\n  signOut = () => {\n    Cookies.remove('authenticatedUser');\n    this.setState({ user: null });\n  }\n\n\n  render(){\n    const { user } = this.state;\n\n    const value = {\n      user,\n      // Add the 'actions' property and object\n      actions: {\n        signIn: this.signIn,\n        signOut: this.signOut\n      }\n    }\n\n    return (\n      <Context.Provider value={value}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n\n/**\n * A higher-order component that wraps the provided component in a Context Consumer component.\n * @param {class} Component - A React component.\n * @returns {function} A higher-order component.\n */\n\nexport default function withContext(OriginalComponent) {\n  return function ContextComponent(props) {\n    return (\n      <Context.Consumer>\n        {context => <OriginalComponent {...props} context={context} />}\n      </Context.Consumer>\n    );\n  }\n}\n","import React from 'react';\nimport { Consumer } from './Context';\nimport { Route, Redirect } from 'react-router-dom';\n\nexport default ({ component: Component, ...rest }) => {\n    return (\n      <Consumer>\n        {context => (\n          <Route\n            {...rest}\n            render={ props => context.user ? (\n              <Component {...props}/>\n            ) : (\n              <Redirect to={{\n                pathname: '/signin',\n                state: { from: props.location }\n              }}/>\n            )}\n          />\n        )}\n      </Consumer>\n    );\n}\n","import React from 'react';\nimport {\n  HashRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom';\n\nimport Header from './components/Header';\nimport Courses from './components/Courses';\nimport CourseDetail from './components/CourseDetail';\nimport CreateCourse from './components/CreateCourse';\nimport DeleteCourse from './components/DeleteCourse';\nimport UpdateCourse from './components/UpdateCourse';\nimport UserSignUp from './components/UserSignUp';\nimport UserSignIn from './components/UserSignIn';\nimport UserSignOut from './components/UserSignOut';\nimport NotFound from './components/NotFound';\nimport Forbidden from './components/Forbidden';\nimport UnhandledError from './components/UnhandledError';\nimport withcontext from './Context';\nimport PrivateRoute from './PrivateRoute';\n\nconst HeaderWithContext = withcontext(Header);\nconst UserSignInWithContext = withcontext(UserSignIn);\nconst UserSignUpWithContext = withcontext(UserSignUp);\nconst UserSignOutWithContext = withcontext(UserSignOut);\nconst CreateCourseWithContext = withcontext(CreateCourse);\nconst UpdateCourseWithContext = withcontext(UpdateCourse);\nconst CourseDetailWithContext = withcontext(CourseDetail);\nconst DeleteCourseWithContext = withcontext(DeleteCourse);\nconst CoursesWithContext = withcontext(Courses);\n\nexport default () => {\n  return (\n    <Router>\n      <div>\n        <HeaderWithContext />\n        <Switch>\n          <Route exact path=\"/\" component={CoursesWithContext} />\n          <Route exact path=\"/courses\" component={CoursesWithContext} />\n          <PrivateRoute path=\"/courses/create\" component={CreateCourseWithContext} />\n          <PrivateRoute path=\"/courses/:id/update\" component={UpdateCourseWithContext} />\n          <PrivateRoute path=\"/courses/:id/delete\" component={DeleteCourseWithContext} />\n          <Route exact path=\"/courses/:id\" component={CourseDetailWithContext} />\n          <Route path=\"/signup\" component={UserSignUpWithContext} />\n          <Route path=\"/signin\" component={UserSignInWithContext} />\n          <Route path=\"/signout\" component={UserSignOutWithContext} />\n          <Route path=\"/forbidden\" component={Forbidden} />\n          <Route path=\"/error\" component={UnhandledError} />\n          <Route path=\"/notfound\" component={NotFound} />\n          <Route component={NotFound} />\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default (props) => {\n\n  const { user } = props.context;\n\n  return (\n    <div className=\"header\">\n      <div className=\"bounds\">\n        <h1 className=\"header--logo\" title=\"Click to navigate to homepage\"><Link to=\"/\">Courses</Link></h1>\n        {/* Use ternary operator to condionaly display the signin and singout buttons based on user Authorization */}\n        { user ?\n          <nav>\n            <span>Welcome, {user.firstName}!</span>\n            <Link className=\"signout\" to=\"/signout\">Sign Out</Link>\n          </nav>\n          :\n          <nav>\n            <Link className=\"signup\" to=\"/signup\">Sign Up</Link>\n            <Link className=\"signin\" to=\"/signin\">Sign In</Link>\n          </nav>\n        }\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nexport default (props) => {\n\n  return (\n    <Redirect to={{\n      pathname: '/',\n      state: { from: props.location }\n    }}/>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './global.css';\nimport './index.css';\nimport App from './App';\nimport { Provider } from './Context';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}